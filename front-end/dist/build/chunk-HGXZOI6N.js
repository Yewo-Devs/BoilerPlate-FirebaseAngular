import{d as C}from"./chunk-4TGDBMK4.js";import{a as V}from"./chunk-TPI4TS65.js";import{a as c}from"./chunk-TWQDPD4B.js";import{a as A}from"./chunk-MOHHWKAW.js";import{t as L}from"./chunk-XB25HVPP.js";import{$a as b,A as m,H as f,Pa as I,Q as p,R as _,V as a,_a as R,g as h,h as E,i as y,ja as U,ma as O,n as P,na as N,p as l,qa as S,w as D}from"./chunk-KK5ZIUJ6.js";import{a as d,d as g}from"./chunk-4CLCTAJ7.js";var T=class{constructor(){}loadScript(j,e,t,i=null){if(typeof document<"u"&&!document.getElementById(j)){let n=document.createElement("script");n.async=!0,n.src=e,n.onload=t,i||(i=document.head),i.appendChild(n)}}},v=class{},x={oneTapEnabled:!0},k=(()=>{class s extends T{static{this.PROVIDER_ID="GOOGLE"}constructor(e,t){super(),this.clientId=e,this.initOptions=t,this.changeUser=new O,this._socialUser=new h(null),this._accessToken=new h(null),this._receivedAccessToken=new O,this.initOptions=d(d({},x),this.initOptions),this._socialUser.pipe(f(1)).subscribe(this.changeUser),this._accessToken.pipe(f(1)).subscribe(this._receivedAccessToken)}initialize(e,t){return new Promise((i,n)=>{try{this.loadScript(s.PROVIDER_ID,this.getGoogleLoginScriptSrc(t),()=>{if(google.accounts.id.initialize({client_id:this.clientId,auto_select:e,callback:({credential:o})=>{let r=this.createSocialUser(o);this._socialUser.next(r)},prompt_parent_id:this.initOptions?.prompt_parent_id,itp_support:this.initOptions.oneTapEnabled,use_fedcm_for_prompt:this.initOptions.oneTapEnabled}),this.initOptions.oneTapEnabled&&this._socialUser.pipe(D(o=>o===null)).subscribe(()=>google.accounts.id.prompt(console.debug)),this.initOptions.scopes){let o=this.initOptions.scopes instanceof Array?this.initOptions.scopes.filter(r=>r).join(" "):this.initOptions.scopes;this._tokenClient=google.accounts.oauth2.initTokenClient({client_id:this.clientId,scope:o,prompt:this.initOptions.prompt,callback:r=>{r.error?this._accessToken.error({code:r.error,description:r.error_description,uri:r.error_uri}):this._accessToken.next(r.access_token)}})}i()})}catch(o){n(o)}})}getLoginStatus(){return new Promise((e,t)=>{this._socialUser.value?e(this._socialUser.value):t(`No user is currently logged in with ${s.PROVIDER_ID}`)})}refreshToken(){return new Promise((e,t)=>{google.accounts.id.revoke(this._socialUser.value.id,i=>{i.error?t(i.error):e(this._socialUser.value)})})}getAccessToken(){return new Promise((e,t)=>{this._tokenClient?(this._tokenClient.requestAccessToken({hint:this._socialUser.value?.email}),this._receivedAccessToken.pipe(m(1)).subscribe(e)):this._socialUser.value?t("No token client was instantiated, you should specify some scopes."):t("You should be logged-in first.")})}revokeAccessToken(){return new Promise((e,t)=>{this._tokenClient?this._accessToken.value?google.accounts.oauth2.revoke(this._accessToken.value,()=>{this._accessToken.next(null),e()}):t("No access token to revoke"):t("No token client was instantiated, you should specify some scopes.")})}signIn(){return Promise.reject('You should not call this method directly for Google, use "<asl-google-signin-button>" wrapper or generate the button yourself with "google.accounts.id.renderButton()" (https://developers.google.com/identity/gsi/web/guides/display-button#javascript)')}signOut(){return g(this,null,function*(){google.accounts.id.disableAutoSelect(),this._socialUser.next(null)})}createSocialUser(e){let t=new v;t.idToken=e;let i=this.decodeJwt(e);return t.id=i.sub,t.name=i.name,t.email=i.email,t.photoUrl=i.picture,t.firstName=i.given_name,t.lastName=i.family_name,t}decodeJwt(e){let i=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),n=decodeURIComponent(window.atob(i).split("").map(function(o){return"%"+("00"+o.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(n)}getGoogleLoginScriptSrc(e){return e?`https://accounts.google.com/gsi/client?hl=${e}`:"https://accounts.google.com/gsi/client"}}return s})(),u=(()=>{class s{static{this.ERR_LOGIN_PROVIDER_NOT_FOUND="Login provider not found"}static{this.ERR_NOT_LOGGED_IN="Not logged in"}static{this.ERR_NOT_INITIALIZED="Login providers not ready yet. Are there errors on your console?"}static{this.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN="Chosen login provider is not supported for refreshing a token"}static{this.ERR_NOT_SUPPORTED_FOR_ACCESS_TOKEN="Chosen login provider is not supported for getting an access token"}get authState(){return this._authState.asObservable()}get initState(){return this._initState.asObservable()}constructor(e,t,i){this._ngZone=t,this._injector=i,this.providers=new Map,this.autoLogin=!1,this.lang="",this._user=null,this._authState=new E(1),this.initialized=!1,this._initState=new y,e instanceof Promise?e.then(n=>{this.initialize(n)}):this.initialize(e)}initialize(e){this.autoLogin=e.autoLogin!==void 0?e.autoLogin:!1,this.lang=e.lang!==void 0?e.lang:"";let{onError:t=console.error}=e;e.providers.forEach(i=>{this.providers.set(i.id,"prototype"in i.provider?this._injector.get(i.provider):i.provider)}),Promise.all(Array.from(this.providers.values()).map(i=>i.initialize(this.autoLogin,this.lang))).then(()=>{if(this.autoLogin){let i=[],n=!1;this.providers.forEach((o,r)=>{let w=o.getLoginStatus();i.push(w),w.then(z=>{this.setUser(z,r),n=!0}).catch(console.debug)}),Promise.all(i).catch(()=>{n||(this._user=null,this._authState.next(null))})}this.providers.forEach((i,n)=>{P(i.changeUser)&&i.changeUser.subscribe(o=>{this._ngZone.run(()=>{this.setUser(o,n)})})})}).catch(i=>{t(i)}).finally(()=>{this.initialized=!0,this._initState.next(this.initialized),this._initState.complete()})}getAccessToken(e){return g(this,null,function*(){let t=this.providers.get(e);if(this.initialized)if(t){if(!(t instanceof k))throw s.ERR_NOT_SUPPORTED_FOR_ACCESS_TOKEN}else throw s.ERR_LOGIN_PROVIDER_NOT_FOUND;else throw s.ERR_NOT_INITIALIZED;return yield t.getAccessToken()})}refreshAuthToken(e){return new Promise((t,i)=>{if(!this.initialized)i(s.ERR_NOT_INITIALIZED);else{let n=this.providers.get(e);n?typeof n.refreshToken!="function"?i(s.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN):n.refreshToken().then(o=>{this.setUser(o,e),t()}).catch(o=>{i(o)}):i(s.ERR_LOGIN_PROVIDER_NOT_FOUND)}})}refreshAccessToken(e){return new Promise((t,i)=>{if(!this.initialized)i(s.ERR_NOT_INITIALIZED);else if(e!==k.PROVIDER_ID)i(s.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);else{let n=this.providers.get(e);n instanceof k?n.revokeAccessToken().then(t).catch(i):i(s.ERR_LOGIN_PROVIDER_NOT_FOUND)}})}signIn(e,t){return new Promise((i,n)=>{if(!this.initialized)n(s.ERR_NOT_INITIALIZED);else{let o=this.providers.get(e);o?o.signIn(t).then(r=>{this.setUser(r,e),i(r)}).catch(r=>{n(r)}):n(s.ERR_LOGIN_PROVIDER_NOT_FOUND)}})}signOut(e=!1){return new Promise((t,i)=>{if(!this.initialized)i(s.ERR_NOT_INITIALIZED);else if(!this._user)i(s.ERR_NOT_LOGGED_IN);else{let n=this._user.provider,o=this.providers.get(n);o?o.signOut(e).then(()=>{t(),this.setUser(null)}).catch(r=>{i(r)}):i(s.ERR_LOGIN_PROVIDER_NOT_FOUND)}})}setUser(e,t){e&&t&&(e.provider=t),this._user=e,this._authState.next(e)}static{this.\u0275fac=function(t){return new(t||s)(a("SocialAuthServiceConfig"),a(N),a(U))}}static{this.\u0275prov=p({token:s,factory:s.\u0275fac,providedIn:"root"})}}return s})(),W=(()=>{class s{static initialize(e){return{ngModule:s,providers:[u,{provide:"SocialAuthServiceConfig",useValue:e}]}}constructor(e){if(e)throw new Error("SocialLoginModule is already loaded. Import it in the AppModule only")}static{this.\u0275fac=function(t){return new(t||s)(a(s,12))}}static{this.\u0275mod=R({type:s})}static{this.\u0275inj=_({providers:[u],imports:[L]})}}return s})();var ee=(()=>{class s{constructor(e,t){this.type="icon",this.size="medium",this.text="signin_with",this.shape="rectangular",this.theme="outline",this.logo_alignment="left",this.width=0,this.locale="",t.initState.pipe(m(1)).subscribe(()=>{Promise.resolve(this.width).then(i=>{i>400||i<200&&i!=0?Promise.reject("Please note .. max-width 400 , min-width 200 (https://developers.google.com/identity/gsi/web/tools/configurator)"):google.accounts.id.renderButton(e.nativeElement,{type:this.type,size:this.size,text:this.text,width:this.width,shape:this.shape,theme:this.theme,logo_alignment:this.logo_alignment,locale:this.locale})})})}static{this.\u0275fac=function(t){return new(t||s)(I(S),I(u))}}static{this.\u0275dir=b({type:s,selectors:[["asl-google-signin-button"]],inputs:{type:"type",size:"size",text:"text",shape:"shape",theme:"theme",logo_alignment:"logo_alignment",width:"width",locale:"locale"},standalone:!1})}}return s})(),te=(()=>{class s{static{this.\u0275fac=function(t){return new(t||s)}}static{this.\u0275mod=R({type:s})}static{this.\u0275inj=_({})}}return s})();var le=(()=>{class s{constructor(e,t,i,n){this.httpClient=e,this.preferencesService=t,this.authService=i,this.routerService=n;let o=t.getPreferences().user;this.userSubject=new h(o),this.user$=this.userSubject.asObservable()}user(){return this.userSubject.value}setUser(e){this.userSubject.next(e)}socialLogin(e){return this.httpClient.post(c.apiUrl+"account/social-login",e).pipe(l(t=>(this.setUser(t),t)))}login(e){return this.httpClient.post(c.apiUrl+"account/login",e).pipe(l(t=>(this.setUser(t),t)))}refreshToken(){let e=this.preferencesService.getPreferences().user.refreshToken,t={accountId:this.preferencesService.getPreferences().user.id,refreshToken:e,keepLoggedIn:this.preferencesService.getPreferences().keepLoggedIn};return this.httpClient.post(c.apiUrl+"account/refresh-token",t).pipe(l(i=>(this.setUser(i),i)))}registerUser(e){return this.httpClient.post(c.apiUrl+"account/register",e).pipe(l(t=>(this.setUser(t),t)))}logout(){this.setUser(null),this.authService.signOut();let e=this.preferencesService.getPreferences();e.user=null,e.keepLoggedIn=null,e.profile=null,this.preferencesService.setPreferences(e),this.routerService.url==="/"?this.routerService.navigateByUrl("/").then(()=>{window.location.reload()}):this.routerService.navigateByUrl("/")}getUsers(){return this.httpClient.get(c.apiUrl+"account/get-users").pipe(l(e=>e))}resendVerificationEmail(e){return this.httpClient.get(c.apiUrl+"account/update-verification-token?accountId="+e)}editUser(e){return this.httpClient.post(c.apiUrl+"account/edit-user",e).pipe(l(t=>(this.setUser(t),t)))}tokenRequest(e){return this.httpClient.get(c.apiUrl+"account/password-reset-request?email="+e,{responseType:"text"})}passwordReset(e){return this.httpClient.post(c.apiUrl+"account/password-reset",e,{responseType:"text"})}static{this.\u0275fac=function(t){return new(t||s)(a(A),a(V),a(u),a(C))}}static{this.\u0275prov=p({token:s,factory:s.\u0275fac,providedIn:"root"})}}return s})();export{k as a,u as b,W as c,ee as d,te as e,le as f};
