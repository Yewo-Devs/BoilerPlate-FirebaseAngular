import './polyfills.server.mjs';
import{a as V}from"./chunk-PMTGJU2L.mjs";import{a as l}from"./chunk-ZJ6JZSY5.mjs";import{p as j}from"./chunk-RKHYJ25K.mjs";import{a as C}from"./chunk-D2P6BBTD.mjs";import{t as A}from"./chunk-4CMVCGMC.mjs";import{A as f,H as _,Q as d,R as O,Sa as R,V as c,bb as v,cb as L,g as h,h as y,i as D,ja as S,ma as I,n as P,na as N,p as u,qa as b,w as U}from"./chunk-JQ55PVVS.mjs";import{a as m,h as g}from"./chunk-S6KH3LOX.mjs";var w=class{constructor(){}loadScript(o,e,t,i=null){if(typeof document<"u"&&!document.getElementById(o)){let n=document.createElement("script");n.async=!0,n.src=e,n.onload=t,i||(i=document.head),i.appendChild(n)}}},T=class{},F={oneTapEnabled:!0},k=(()=>{class s extends w{static{this.PROVIDER_ID="GOOGLE"}constructor(e,t){super(),this.clientId=e,this.initOptions=t,this.changeUser=new I,this._socialUser=new h(null),this._accessToken=new h(null),this._receivedAccessToken=new I,this.initOptions=m(m({},F),this.initOptions),this._socialUser.pipe(_(1)).subscribe(this.changeUser),this._accessToken.pipe(_(1)).subscribe(this._receivedAccessToken)}initialize(e,t){return new Promise((i,n)=>{try{this.loadScript(s.PROVIDER_ID,this.getGoogleLoginScriptSrc(t),()=>{if(google.accounts.id.initialize({client_id:this.clientId,auto_select:e,callback:({credential:r})=>{let a=this.createSocialUser(r);this._socialUser.next(a)},prompt_parent_id:this.initOptions?.prompt_parent_id,itp_support:this.initOptions.oneTapEnabled,use_fedcm_for_prompt:this.initOptions.oneTapEnabled}),this.initOptions.oneTapEnabled&&this._socialUser.pipe(U(r=>r===null)).subscribe(()=>google.accounts.id.prompt(console.debug)),this.initOptions.scopes){let r=this.initOptions.scopes instanceof Array?this.initOptions.scopes.filter(a=>a).join(" "):this.initOptions.scopes;this._tokenClient=google.accounts.oauth2.initTokenClient({client_id:this.clientId,scope:r,prompt:this.initOptions.prompt,callback:a=>{a.error?this._accessToken.error({code:a.error,description:a.error_description,uri:a.error_uri}):this._accessToken.next(a.access_token)}})}i()})}catch(r){n(r)}})}getLoginStatus(){return new Promise((e,t)=>{this._socialUser.value?e(this._socialUser.value):t(`No user is currently logged in with ${s.PROVIDER_ID}`)})}refreshToken(){return new Promise((e,t)=>{google.accounts.id.revoke(this._socialUser.value.id,i=>{i.error?t(i.error):e(this._socialUser.value)})})}getAccessToken(){return new Promise((e,t)=>{this._tokenClient?(this._tokenClient.requestAccessToken({hint:this._socialUser.value?.email}),this._receivedAccessToken.pipe(f(1)).subscribe(e)):this._socialUser.value?t("No token client was instantiated, you should specify some scopes."):t("You should be logged-in first.")})}revokeAccessToken(){return new Promise((e,t)=>{this._tokenClient?this._accessToken.value?google.accounts.oauth2.revoke(this._accessToken.value,()=>{this._accessToken.next(null),e()}):t("No access token to revoke"):t("No token client was instantiated, you should specify some scopes.")})}signIn(){return Promise.reject('You should not call this method directly for Google, use "<asl-google-signin-button>" wrapper or generate the button yourself with "google.accounts.id.renderButton()" (https://developers.google.com/identity/gsi/web/guides/display-button#javascript)')}signOut(){return g(this,null,function*(){google.accounts.id.disableAutoSelect(),this._socialUser.next(null)})}createSocialUser(e){let t=new T;t.idToken=e;let i=this.decodeJwt(e);return t.id=i.sub,t.name=i.name,t.email=i.email,t.photoUrl=i.picture,t.firstName=i.given_name,t.lastName=i.family_name,t}decodeJwt(e){let i=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),n=decodeURIComponent(window.atob(i).split("").map(function(r){return"%"+("00"+r.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(n)}getGoogleLoginScriptSrc(e){return e?`https://accounts.google.com/gsi/client?hl=${e}`:"https://accounts.google.com/gsi/client"}}return s})(),p=(()=>{class s{static{this.ERR_LOGIN_PROVIDER_NOT_FOUND="Login provider not found"}static{this.ERR_NOT_LOGGED_IN="Not logged in"}static{this.ERR_NOT_INITIALIZED="Login providers not ready yet. Are there errors on your console?"}static{this.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN="Chosen login provider is not supported for refreshing a token"}static{this.ERR_NOT_SUPPORTED_FOR_ACCESS_TOKEN="Chosen login provider is not supported for getting an access token"}get authState(){return this._authState.asObservable()}get initState(){return this._initState.asObservable()}constructor(e,t,i){this._ngZone=t,this._injector=i,this.providers=new Map,this.autoLogin=!1,this.lang="",this._user=null,this._authState=new y(1),this.initialized=!1,this._initState=new D,e instanceof Promise?e.then(n=>{this.initialize(n)}):this.initialize(e)}initialize(e){this.autoLogin=e.autoLogin!==void 0?e.autoLogin:!1,this.lang=e.lang!==void 0?e.lang:"";let{onError:t=console.error}=e;e.providers.forEach(i=>{this.providers.set(i.id,"prototype"in i.provider?this._injector.get(i.provider):i.provider)}),Promise.all(Array.from(this.providers.values()).map(i=>i.initialize(this.autoLogin,this.lang))).then(()=>{if(this.autoLogin){let i=[],n=!1;this.providers.forEach((r,a)=>{let E=r.getLoginStatus();i.push(E),E.then(M=>{this.setUser(M,a),n=!0}).catch(console.debug)}),Promise.all(i).catch(()=>{n||(this._user=null,this._authState.next(null))})}this.providers.forEach((i,n)=>{P(i.changeUser)&&i.changeUser.subscribe(r=>{this._ngZone.run(()=>{this.setUser(r,n)})})})}).catch(i=>{t(i)}).finally(()=>{this.initialized=!0,this._initState.next(this.initialized),this._initState.complete()})}getAccessToken(e){return g(this,null,function*(){let t=this.providers.get(e);if(this.initialized)if(t){if(!(t instanceof k))throw s.ERR_NOT_SUPPORTED_FOR_ACCESS_TOKEN}else throw s.ERR_LOGIN_PROVIDER_NOT_FOUND;else throw s.ERR_NOT_INITIALIZED;return yield t.getAccessToken()})}refreshAuthToken(e){return new Promise((t,i)=>{if(!this.initialized)i(s.ERR_NOT_INITIALIZED);else{let n=this.providers.get(e);n?typeof n.refreshToken!="function"?i(s.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN):n.refreshToken().then(r=>{this.setUser(r,e),t()}).catch(r=>{i(r)}):i(s.ERR_LOGIN_PROVIDER_NOT_FOUND)}})}refreshAccessToken(e){return new Promise((t,i)=>{if(!this.initialized)i(s.ERR_NOT_INITIALIZED);else if(e!==k.PROVIDER_ID)i(s.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);else{let n=this.providers.get(e);n instanceof k?n.revokeAccessToken().then(t).catch(i):i(s.ERR_LOGIN_PROVIDER_NOT_FOUND)}})}signIn(e,t){return new Promise((i,n)=>{if(!this.initialized)n(s.ERR_NOT_INITIALIZED);else{let r=this.providers.get(e);r?r.signIn(t).then(a=>{this.setUser(a,e),i(a)}).catch(a=>{n(a)}):n(s.ERR_LOGIN_PROVIDER_NOT_FOUND)}})}signOut(e=!1){return new Promise((t,i)=>{if(!this.initialized)i(s.ERR_NOT_INITIALIZED);else if(!this._user)i(s.ERR_NOT_LOGGED_IN);else{let n=this._user.provider,r=this.providers.get(n);r?r.signOut(e).then(()=>{t(),this.setUser(null)}).catch(a=>{i(a)}):i(s.ERR_LOGIN_PROVIDER_NOT_FOUND)}})}setUser(e,t){e&&t&&(e.provider=t),this._user=e,this._authState.next(e)}static{this.\u0275fac=function(t){return new(t||s)(c("SocialAuthServiceConfig"),c(N),c(S))}}static{this.\u0275prov=d({token:s,factory:s.\u0275fac,providedIn:"root"})}}return s})(),ee=(()=>{class s{static initialize(e){return{ngModule:s,providers:[p,{provide:"SocialAuthServiceConfig",useValue:e}]}}constructor(e){if(e)throw new Error("SocialLoginModule is already loaded. Import it in the AppModule only")}static{this.\u0275fac=function(t){return new(t||s)(c(s,12))}}static{this.\u0275mod=v({type:s})}static{this.\u0275inj=O({providers:[p],imports:[A]})}}return s})();var te=(()=>{class s{constructor(e,t){this.type="icon",this.size="medium",this.text="signin_with",this.shape="rectangular",this.theme="outline",this.logo_alignment="left",this.width=0,this.locale="",t.initState.pipe(f(1)).subscribe(()=>{Promise.resolve(this.width).then(i=>{i>400||i<200&&i!=0?Promise.reject("Please note .. max-width 400 , min-width 200 (https://developers.google.com/identity/gsi/web/tools/configurator)"):google.accounts.id.renderButton(e.nativeElement,{type:this.type,size:this.size,text:this.text,width:this.width,shape:this.shape,theme:this.theme,logo_alignment:this.logo_alignment,locale:this.locale})})})}static{this.\u0275fac=function(t){return new(t||s)(R(b),R(p))}}static{this.\u0275dir=L({type:s,selectors:[["asl-google-signin-button"]],inputs:{type:"type",size:"size",text:"text",shape:"shape",theme:"theme",logo_alignment:"logo_alignment",width:"width",locale:"locale"},standalone:!1})}}return s})(),ie=(()=>{class s{static{this.\u0275fac=function(t){return new(t||s)}}static{this.\u0275mod=v({type:s})}static{this.\u0275inj=O({})}}return s})();var z=class s{constructor(o,e,t,i){this.httpClient=o;this.preferencesService=e;this.authService=t;this.routerService=i;let n=e.getPreferences().user;this.userSubject=new h(n),this.user$=this.userSubject.asObservable()}userSubject;user$;user(){return this.userSubject.value}setUser(o){this.userSubject.next(o)}socialLogin(o){return this.httpClient.post(l.apiUrl+"account/social-login",o).pipe(u(e=>(this.setUser(e),e)))}login(o){return this.httpClient.post(l.apiUrl+"account/login",o).pipe(u(e=>(this.setUser(e),e)))}refreshToken(){let o=this.preferencesService.getPreferences().user.refreshToken,e={accountId:this.preferencesService.getPreferences().user.id,refreshToken:o,keepLoggedIn:this.preferencesService.getPreferences().keepLoggedIn};return this.httpClient.post(l.apiUrl+"account/refresh-token",e).pipe(u(t=>(this.setUser(t),t)))}registerUser(o){return this.httpClient.post(l.apiUrl+"account/register",o).pipe(u(e=>(this.setUser(e),e)))}logout(){this.setUser(null),this.authService.signOut();let o=this.preferencesService.getPreferences();o.user=null,o.keepLoggedIn=null,o.profile=null,this.preferencesService.setPreferences(o),this.routerService.url==="/"?this.routerService.navigateByUrl("/").then(()=>{window.location.reload()}):this.routerService.navigateByUrl("/")}getUsers(){return this.httpClient.get(l.apiUrl+"account/get-users").pipe(u(o=>o))}resendVerificationEmail(o){return this.httpClient.get(l.apiUrl+"account/update-verification-token?accountId="+o)}editUser(o){return this.httpClient.post(l.apiUrl+"account/edit-user",o).pipe(u(e=>(this.setUser(e),e)))}tokenRequest(o){return this.httpClient.get(l.apiUrl+"account/password-reset-request?email="+o,{responseType:"text"})}passwordReset(o){return this.httpClient.post(l.apiUrl+"account/password-reset",o,{responseType:"text"})}static \u0275fac=function(e){return new(e||s)(c(C),c(V),c(p),c(j))};static \u0275prov=d({token:s,factory:s.\u0275fac,providedIn:"root"})};export{k as a,p as b,ee as c,te as d,ie as e,z as f};
